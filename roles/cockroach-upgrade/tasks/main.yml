---
# tasks file for cockroach-upgrade

- debug: msg="---------------- UPGRADING COCKROACHDB TO VERSION - {{ install_version }} ---------------- "

- name: Check status before upgrade
  shell: "systemctl status {{ systemd_config_service }}"
  when: use_systemd
  register: status
  tags: start_cluster_for_systemd,systemd_config,status

- debug: var=status.stdout_lines
  when: use_systemd
  tags: start_cluster_for_systemd,systemd_config,status

- name: Stop cluster node
  cockroach_cluster: path={{ install_location }} host={{ inventory_hostname }} state=stopped
  when: not use_systemd
  tags: stop_cluster
  become_user: "{{ cockroach_user }}"

- name: Stop cluster node (systemd)
  systemd: name={{ systemd_config_service }} state=stopped
  when: use_systemd
  tags: stop_cluster

- name: Configure cockroach systemd service
  template: src=cockroachdb.service.j2 dest={{ systemd_config_path }} owner=root mode=0755
  become: true
  when: use_systemd
  register: systemd_config
  tags: systemd_config,create_systemd_config

- name: Register cockroachdb systemd service
  systemd: name={{ systemd_config_service }} daemon_reload=yes enabled=yes
  when: use_systemd #and systemd_config.change
  tags: systemd_config

- pause:
     seconds: 5

- name: Start cluster node (systemd)
  systemd: name={{ systemd_config_service }} state=started
  when: use_systemd
  tags: stop_cluster

- name: Start cluster node
  cockroach_cluster:
           path={{ install_location }}
           host={{ inventory_hostname }}
           store={{ datastore |default (omit)}}
           cache={{ caches |default (omit)}}
           log_dir={{ log_dir | default(omit) }}
           locality={{ locality | default(omit) }}
           state=started
  when: not use_systemd
  tags: upgrade
  become_user: "{{ cockroach_user }}"

- pause:
     seconds: 5

- name: Check status after upgrade
  shell: "systemctl status {{ systemd_config_service }}; sleep 3; systemctl status {{ systemd_config_service }}"
  when: use_systemd
  register: status
  tags: start_cluster_for_systemd,systemd_config,status

- debug: var=status.stdout_lines
  when: use_systemd
  tags: start_cluster_for_systemd,systemd_config,status

- pause:
  when: pause_between_nodes
